\documentclass[11pt]{article}
<<packages,include=F,cache=F>>=
#library("coda")
#library("foreach") #included in doParallel or doMPI
#library("doMC")
library("ggplot2")
#library("grid")
#library("magrittr")
#library("plyr")
#library("reshape2")
#library("xtable")
library("spatPomp")
#ibrary("dplyr")
#stopifnot(packageVersion("pomp")>="2.0")
library(doParallel)
library(doRNG)
cores <- 4
registerDoParallel(cores)

#cores <- 40
#registerDoParallel(cores)

@

<<set-opts,include=F,cache=F>>=

options(
        scipen=2,
        help_type="html",
        stringsAsFactors=FALSE,
        prompt="R> ",
        continue="+  ",
        width=70,
        useFancyQuotes=FALSE,
        reindent.spaces=2,
        xtable.comment=FALSE
        )
@

<<knitr-opts,include=F,cache=F,purl=F>>=
library("knitr")
opts_knit$set(concordance=TRUE)
opts_chunk$set(
    progress=TRUE,prompt=TRUE,highlight=FALSE,
    tidy=TRUE,
    tidy.opts=list(
        keep.blank.line=FALSE
    ),
    comment="",
    warning=FALSE,
    message=FALSE,
    error=TRUE,
    echo=TRUE,
    cache=FALSE,
    strip.white=TRUE,
    results="markup",
    background="#FFFFFF00",
    size="normalsize",
    fig.path="figure/",
    fig.lp="fig:",
    fig.align="left",
    fig.show="asis",
#    dpi=300,
    dev="pdf",
    dev.args=list(
        bg="transparent",
        pointsize=9
    )
)

myround<- function (x, digits = 1) {
  # taken from the broman package
  if (digits < 1) 
    stop("This is intended for the case digits >= 1.")
  if (length(digits) > 1) {
    digits <- digits[1]
    warning("Using only digits[1]")
  }
  tmp <- sprintf(paste("%.", digits, "f", sep = ""), x)
  zero <- paste0("0.", paste(rep("0", digits), collapse = ""))
  tmp[tmp == paste0("-", zero)] <- zero
  tmp
}

@

\usepackage{amsmath,amsfonts,amssymb,graphicx} 

\input{header-ms.tex}
\input{theorems.tex}

\renewcommand\thefigure{E-\arabic{figure}}
\renewcommand\thetable{E-\arabic{table}}
\renewcommand\thepage{E-\arabic{page}}
\renewcommand\thesection{E\arabic{section}}
\renewcommand\theequation{E\arabic{equation}}
\renewcommand\theprop{E\arabic{prop}}
\renewcommand\thelemma{E\arabic{lemma}}
\renewcommand{\contentsname}{Contents}
\renewcommand{\refname}{References}

\newcommand\altx{x^\prime}
\newcommand\alty{y^\prime}

\bibliographystyle{apalike}
%% added or modified from pnas-new.cls
\usepackage{natbib} 
\usepackage{fullpage}
\renewcommand\myeqref[1]{(\ref{#1})}

\renewcommand\siOnly[1]{#1}



\begin{document}

%\begin{center}
\title{Investigating parameter regimes for the measles spatPomp}
\date{\today}
%\author{E. L. Ionides, K. Asfaw, J. Park and A. A. King}
\maketitle

%{\Large \bf Extensions to ``Adapted simulation island filters for partially observed spatiotemporal systems''}


%\medskip

%\authorList

%\end{center} 

\medskip

Is the measles model parameterized to a suitable regime for the simulation study?

\medskip

\newpage

%\section{Data vs simulations}

<<slice_load, echo=F>>=

# LOAD RESULTS COMPUTED FOR THE MAIN TEXT

 slice_files_dir <- "slice"
# slice_files_dir <- "bak/slice1"
# slice_files_dir <- "bak/slice23-22nov19"
#slice_files_dir <- "bak/slice22-15nov19"


#slice_files_list <- list.files(path=slice_files_dir,full.names=TRUE)
#for(filename in slice_files_list) load(file=filename)

load(file=paste0(slice_files_dir,"/slice_results.rda"))
load(file=paste0(slice_files_dir,"/slice_settings.rda"))
load(file=paste0(slice_files_dir,"/slice_spatPomp.rda"))

@

<<slice_image_plot, echo=F, fig.height=6.5, fig.width=7, out.width="6.5in", fig.cap = paste('Log$_{10}$ (reported cases $+$ 1). Top: the measles simulation used for the Jan 2020 version; Bottom: the data.')>>=
library(spatPomp)
library(fields)
par(mai=c(0.7,0.7,0.1,0.5))
par(mfrow=c(2,1))
image.plot(y=1:dim(obs(slice_sim))[1],x=time(slice_sim),z=log(t(obs(slice_sim)+1)),ylab="unit",xlab="time",col=gray.colors(33))

m <- measles(40)
image.plot(y=1:dim(obs(m))[1],x=time(m),z=log(t(obs(m)+1)),ylab="unit",xlab="time",col=gray.colors(33))

@

%% Fig.~\ref{fig:slice_image_plot} shows the simulation used for the measles scaling experiment in  Figure~{\MainFigureMeaslesScaling} and the likelihood slice shown in Figure~{\MainFigureMeaslesSlice} of the main text.
%% Unit $\unit$ models the $u$th largest city in UK.
%% Table~\ref{tab:measles_parameters} gives the model parameter values and Table~\ref{tab:mscale} gives the algorithmic settings used for the filters.
%% The times in Table~\ref{tab:mscale} give the total time required by each algorithm to calculate all its results for Figure~{\MainFigureMeaslesScaling} in the main text, using \Sexpr{slice_cores} cores.
%% The expected forecast function $\mu(x,s,t)$ needed for ASIF-IR and GIRF was computed using a numerical solution to the deterministic skeleton of the stochastic model, i.e, a system of ODEs with derivative matching the infinitesimal mean function of the stochastic dynamic model.
%% In the specifications of $h_\unit\big(x)$, $\VtoTheta_\unit(V,x,\theta)$ and $\thetaToV_\unit(\theta,x)$, the latent process value $x$ contains a variable $C$ giving the cumulative removed infections in the current observation interval. 

\clearpage

<<alt_spatPomp,eval=T,echo=F>>=
alt_U <- 40
alt_N <- 15*26


measles_uk <- measles(alt_U)

measles_unit_statenames <- c('S','E','I','R','Acc', 'C','W')
  measles_statenames <- paste0(rep(measles_unit_statenames,each=alt_U),1:alt_U)
  measles_IVPnames <- paste0(measles_statenames[1:(5*alt_U)],"_0")
  measles_RPnames <- c("alpha","iota","R0","cohort","amplitude",
    "gamma","sigma","mu","sigmaSE","rho","psi","g")
  measles_paramnames <- c(measles_RPnames,measles_IVPnames)

  measles_params <- rep(NA,length(measles_paramnames))
  names(measles_params) <- measles_paramnames



#3
city_params <- c(alpha=0.965,iota=0.59,R0=32.9,cohort=0,
  amplitude=0.29,gamma=56.8, sigma=34.4,mu=0.02,
  sigmaSE=0.0551,rho=0.55,
  psi=0.161,g=100,
  S_0=0.0489, E_0=0.0000241, I_0=0.0000338,R_0=0.951
)

#4
city_params <- c(alpha=1,iota=0.59,
  R0=14,
  cohort=0,
  amplitude=0.4,gamma=52, sigma=52,mu=0.02,
  sigmaSE=0.1,rho=0.55,
  psi=0.161,g=200,
  S_0=0.06, E_0=0.0000241, I_0=0.0000338,R_0=0.951
)

#5
city_params <- c(alpha=1,iota=0.59,
  R0=15,
  cohort=0,
  amplitude=0.6,gamma=52, sigma=52,mu=0.02,
  sigmaSE=0.12,rho=0.55,
  psi=0.161,g=300,
  S_0=0.06, E_0=0.00004, I_0=0.00004,R_0=0.951
)

#5
city_params <- c(alpha=1,iota=0.59,
  R0=15,
  cohort=0,
  amplitude=0.6,gamma=52, sigma=52,mu=0.02,
  sigmaSE=0.12,rho=0.55,
  psi=0.161,g=300,
  S_0=0.075, E_0=0.00004, I_0=0.00004,R_0=0.951
)

#6
set.seed(29)
city_params <- c(alpha=1,iota=0.59,
  R0=15.5,
  cohort=0,
  amplitude=0.6,gamma=52, sigma=52,mu=0.025,
  sigmaSE=0.11,rho=0.55,
  psi=0.161,g=200,
  S_0=0.074, E_0=0.00004, I_0=0.00004,R_0=0.951
)

#7
set.seed(35)
city_params <- c(alpha=1,iota=0.59,
  R0=17,
  cohort=0,
  amplitude=0.65,gamma=52, sigma=52,mu=0.035,
  sigmaSE=0.15,rho=0.55,
  psi=0.161,g=500,
  S_0=0.062, E_0=0.00005, I_0=0.00004,R_0=0.951
)

#7
set.seed(40)
city_params <- c(alpha=1,iota=0.59,
  R0=16.5,
  cohort=0.1,
  amplitude=0.6,gamma=52, sigma=52,mu=0.035,
  sigmaSE=0.14,rho=0.55,
  psi=0.161,g=500,
  S_0=0.062, E_0=0.00005, I_0=0.00004,R_0=0.951
)

#8
set.seed(40)
city_params <- c(alpha=1,iota=0.59,
  R0=16.5,
  cohort=0,
  amplitude=0.6,gamma=52, sigma=52,mu=0.035,
  sigmaSE=0.14,rho=0.55,
  psi=0.1,g=500,
  S_0=0.061, E_0=0.00005, I_0=0.00004,R_0=0.951
)

#9
set.seed(42)
city_params <- c(alpha=0.98, iota=0.59,
  R0=30,
  cohort=0,
  amplitude=0.6,gamma=52, sigma=52,mu=0.02,
  sigmaSE=0.15,rho=0.5,
  psi=0.01,g=420,
  S_0=0.031, E_0=0.000015, I_0=0.00001,R_0=0.951
)

#10
set.seed(45)
city_params <- c(alpha=0.98, iota=0,
  R0=30,
  cohort=0,
  amplitude=0.6,gamma=52, sigma=52,mu=0.02,
  sigmaSE=0.15,rho=0.5,
  psi=0.01,g=420,
  S_0=0.031, E_0=0.000015, I_0=0.00002,R_0=0.951
)

#11
set.seed(50)
city_params <- c(alpha=0.98, iota=0,
  R0=30,
  cohort=0,
  amplitude=0.6,gamma=52, sigma=52,mu=0.02,
  sigmaSE=0.15,rho=0.5,
  psi=0.01,g=400,
  S_0=0.031, E_0=0.000015, I_0=0.00002,R_0=0.951
)

#12
set.seed(52)
city_params <- c(alpha=1, iota=0,
  R0=30,
  cohort=0,
  amplitude=0.5,gamma=52, sigma=52,mu=0.02,
  sigmaSE=0.15,rho=0.5,
  psi=0.01,g=400,
  S_0=0.031, E_0=0.00003, I_0=0.00003,R_0=0.951
)

#12
set.seed(3)  # other good seeds: 57 58
city_params <- c(alpha=1, iota=0,
  R0=30,
  cohort=0,
  amplitude=0.5,gamma=52, sigma=52,mu=0.02,
  sigmaSE=0.15,rho=0.5,
  psi=0.01,g=420,
  S_0=0.031, E_0=0.000045, I_0=0.00004,R_0=0.97
)

#13
set.seed(7)  
city_params <- c(alpha=1, iota=0,
  R0=30,
  cohort=0,
  amplitude=0.6,gamma=52, sigma=52,mu=0.02,
  sigmaSE=0.15,rho=0.5,
  psi=0.01,g=400,
  S_0=0.03, E_0=0.00005, I_0=0.00004,R_0=0.97
)

#14
set.seed(34)   # other good seeds: 16, 32

S_0 <- 0.032; E_0 <- 0.00005; I_0 <- 0.00004
city_params <- c(alpha=1, iota=0,
  R0=30,
  cohort=0,
  amplitude=0.5,gamma=52, sigma=52,mu=0.02,
  sigmaSE=0.15,rho=0.5,
  psi=0.01,g=400,
  S_0=S_0, E_0=E_0, I_0=I_0,R_0=1-S_0-E_0-I_0
)


#  measles_params[measles_RPnames] <- c(city_params,g=0)[measles_RPnames]
  measles_params[measles_RPnames] <- city_params[measles_RPnames]
  measles_params[paste0("S",1:alt_U,"_0")] <-city_params["S_0"]
  measles_params[paste0("E",1:alt_U,"_0")] <-city_params["E_0"]
  measles_params[paste0("I",1:alt_U,"_0")] <-city_params["I_0"]
  measles_params[paste0("R",1:alt_U,"_0")] <-city_params["R_0"]
  measles_params[paste0("Acc",1:alt_U,"_0")] <- 0

  alt_sim <- simulate(measles_uk,params=measles_params,times=time(measles_uk)[1:alt_N])
  

@

<<alt_image_plot, echo=F, fig.height=6.0, fig.width=7, out.width="6.5in", fig.cap = paste('Log$_{10}$ (reported cases $+$ 1). Top: experiment; Bottom: the data.')>>=
library(spatPomp)
library(fields)
par(mai=c(0.7,0.7,0.1,0.5))
par(mfrow=c(2,1))
image.plot(y=1:dim(obs(alt_sim))[1],x=time(alt_sim),z=log(t(obs(alt_sim)+1)),ylab="unit",xlab="time",col=gray.colors(33))

image.plot(y=1:dim(obs(m))[1],x=time(m),z=log(t(obs(m)+1)),ylab="unit",xlab="time",col=gray.colors(33))

@

%\bibliography{bib-iif}



\end{document}
